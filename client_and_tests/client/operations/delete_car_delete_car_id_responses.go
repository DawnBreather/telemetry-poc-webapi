// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DeleteCarDeleteCarIDReader is a Reader for the DeleteCarDeleteCarID structure.
type DeleteCarDeleteCarIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteCarDeleteCarIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteCarDeleteCarIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteCarDeleteCarIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteCarDeleteCarIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteCarDeleteCarIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteCarDeleteCarIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /car/delete/{carID}] DeleteCarDeleteCarID", response, response.Code())
	}
}

// NewDeleteCarDeleteCarIDOK creates a DeleteCarDeleteCarIDOK with default headers values
func NewDeleteCarDeleteCarIDOK() *DeleteCarDeleteCarIDOK {
	return &DeleteCarDeleteCarIDOK{}
}

/*
DeleteCarDeleteCarIDOK describes a response with status code 200, with default header values.

Car deleted successfully
*/
type DeleteCarDeleteCarIDOK struct {
	Payload *DeleteCarDeleteCarIDOKBody
}

// IsSuccess returns true when this delete car delete car Id o k response has a 2xx status code
func (o *DeleteCarDeleteCarIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete car delete car Id o k response has a 3xx status code
func (o *DeleteCarDeleteCarIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete car delete car Id o k response has a 4xx status code
func (o *DeleteCarDeleteCarIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete car delete car Id o k response has a 5xx status code
func (o *DeleteCarDeleteCarIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete car delete car Id o k response a status code equal to that given
func (o *DeleteCarDeleteCarIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete car delete car Id o k response
func (o *DeleteCarDeleteCarIDOK) Code() int {
	return 200
}

func (o *DeleteCarDeleteCarIDOK) Error() string {
	return fmt.Sprintf("[DELETE /car/delete/{carID}][%d] deleteCarDeleteCarIdOK  %+v", 200, o.Payload)
}

func (o *DeleteCarDeleteCarIDOK) String() string {
	return fmt.Sprintf("[DELETE /car/delete/{carID}][%d] deleteCarDeleteCarIdOK  %+v", 200, o.Payload)
}

func (o *DeleteCarDeleteCarIDOK) GetPayload() *DeleteCarDeleteCarIDOKBody {
	return o.Payload
}

func (o *DeleteCarDeleteCarIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteCarDeleteCarIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCarDeleteCarIDBadRequest creates a DeleteCarDeleteCarIDBadRequest with default headers values
func NewDeleteCarDeleteCarIDBadRequest() *DeleteCarDeleteCarIDBadRequest {
	return &DeleteCarDeleteCarIDBadRequest{}
}

/*
DeleteCarDeleteCarIDBadRequest describes a response with status code 400, with default header values.

Bad request or invalid car ID
*/
type DeleteCarDeleteCarIDBadRequest struct {
}

// IsSuccess returns true when this delete car delete car Id bad request response has a 2xx status code
func (o *DeleteCarDeleteCarIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete car delete car Id bad request response has a 3xx status code
func (o *DeleteCarDeleteCarIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete car delete car Id bad request response has a 4xx status code
func (o *DeleteCarDeleteCarIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete car delete car Id bad request response has a 5xx status code
func (o *DeleteCarDeleteCarIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete car delete car Id bad request response a status code equal to that given
func (o *DeleteCarDeleteCarIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete car delete car Id bad request response
func (o *DeleteCarDeleteCarIDBadRequest) Code() int {
	return 400
}

func (o *DeleteCarDeleteCarIDBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /car/delete/{carID}][%d] deleteCarDeleteCarIdBadRequest ", 400)
}

func (o *DeleteCarDeleteCarIDBadRequest) String() string {
	return fmt.Sprintf("[DELETE /car/delete/{carID}][%d] deleteCarDeleteCarIdBadRequest ", 400)
}

func (o *DeleteCarDeleteCarIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteCarDeleteCarIDUnauthorized creates a DeleteCarDeleteCarIDUnauthorized with default headers values
func NewDeleteCarDeleteCarIDUnauthorized() *DeleteCarDeleteCarIDUnauthorized {
	return &DeleteCarDeleteCarIDUnauthorized{}
}

/*
DeleteCarDeleteCarIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized attempt to delete car
*/
type DeleteCarDeleteCarIDUnauthorized struct {
}

// IsSuccess returns true when this delete car delete car Id unauthorized response has a 2xx status code
func (o *DeleteCarDeleteCarIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete car delete car Id unauthorized response has a 3xx status code
func (o *DeleteCarDeleteCarIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete car delete car Id unauthorized response has a 4xx status code
func (o *DeleteCarDeleteCarIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete car delete car Id unauthorized response has a 5xx status code
func (o *DeleteCarDeleteCarIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete car delete car Id unauthorized response a status code equal to that given
func (o *DeleteCarDeleteCarIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete car delete car Id unauthorized response
func (o *DeleteCarDeleteCarIDUnauthorized) Code() int {
	return 401
}

func (o *DeleteCarDeleteCarIDUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /car/delete/{carID}][%d] deleteCarDeleteCarIdUnauthorized ", 401)
}

func (o *DeleteCarDeleteCarIDUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /car/delete/{carID}][%d] deleteCarDeleteCarIdUnauthorized ", 401)
}

func (o *DeleteCarDeleteCarIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteCarDeleteCarIDNotFound creates a DeleteCarDeleteCarIDNotFound with default headers values
func NewDeleteCarDeleteCarIDNotFound() *DeleteCarDeleteCarIDNotFound {
	return &DeleteCarDeleteCarIDNotFound{}
}

/*
DeleteCarDeleteCarIDNotFound describes a response with status code 404, with default header values.

Car not found
*/
type DeleteCarDeleteCarIDNotFound struct {
}

// IsSuccess returns true when this delete car delete car Id not found response has a 2xx status code
func (o *DeleteCarDeleteCarIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete car delete car Id not found response has a 3xx status code
func (o *DeleteCarDeleteCarIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete car delete car Id not found response has a 4xx status code
func (o *DeleteCarDeleteCarIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete car delete car Id not found response has a 5xx status code
func (o *DeleteCarDeleteCarIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete car delete car Id not found response a status code equal to that given
func (o *DeleteCarDeleteCarIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete car delete car Id not found response
func (o *DeleteCarDeleteCarIDNotFound) Code() int {
	return 404
}

func (o *DeleteCarDeleteCarIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /car/delete/{carID}][%d] deleteCarDeleteCarIdNotFound ", 404)
}

func (o *DeleteCarDeleteCarIDNotFound) String() string {
	return fmt.Sprintf("[DELETE /car/delete/{carID}][%d] deleteCarDeleteCarIdNotFound ", 404)
}

func (o *DeleteCarDeleteCarIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteCarDeleteCarIDInternalServerError creates a DeleteCarDeleteCarIDInternalServerError with default headers values
func NewDeleteCarDeleteCarIDInternalServerError() *DeleteCarDeleteCarIDInternalServerError {
	return &DeleteCarDeleteCarIDInternalServerError{}
}

/*
DeleteCarDeleteCarIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error or error deleting car
*/
type DeleteCarDeleteCarIDInternalServerError struct {
}

// IsSuccess returns true when this delete car delete car Id internal server error response has a 2xx status code
func (o *DeleteCarDeleteCarIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete car delete car Id internal server error response has a 3xx status code
func (o *DeleteCarDeleteCarIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete car delete car Id internal server error response has a 4xx status code
func (o *DeleteCarDeleteCarIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete car delete car Id internal server error response has a 5xx status code
func (o *DeleteCarDeleteCarIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete car delete car Id internal server error response a status code equal to that given
func (o *DeleteCarDeleteCarIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete car delete car Id internal server error response
func (o *DeleteCarDeleteCarIDInternalServerError) Code() int {
	return 500
}

func (o *DeleteCarDeleteCarIDInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /car/delete/{carID}][%d] deleteCarDeleteCarIdInternalServerError ", 500)
}

func (o *DeleteCarDeleteCarIDInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /car/delete/{carID}][%d] deleteCarDeleteCarIdInternalServerError ", 500)
}

func (o *DeleteCarDeleteCarIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
DeleteCarDeleteCarIDOKBody delete car delete car ID o k body
swagger:model DeleteCarDeleteCarIDOKBody
*/
type DeleteCarDeleteCarIDOKBody struct {

	// result
	// Example: success
	Result string `json:"result,omitempty"`
}

// Validate validates this delete car delete car ID o k body
func (o *DeleteCarDeleteCarIDOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this delete car delete car ID o k body based on context it is used
func (o *DeleteCarDeleteCarIDOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteCarDeleteCarIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteCarDeleteCarIDOKBody) UnmarshalBinary(b []byte) error {
	var res DeleteCarDeleteCarIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
