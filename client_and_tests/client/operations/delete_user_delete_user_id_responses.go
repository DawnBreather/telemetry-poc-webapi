// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DeleteUserDeleteUserIDReader is a Reader for the DeleteUserDeleteUserID structure.
type DeleteUserDeleteUserIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteUserDeleteUserIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteUserDeleteUserIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteUserDeleteUserIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteUserDeleteUserIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteUserDeleteUserIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /user/delete/{userID}] DeleteUserDeleteUserID", response, response.Code())
	}
}

// NewDeleteUserDeleteUserIDOK creates a DeleteUserDeleteUserIDOK with default headers values
func NewDeleteUserDeleteUserIDOK() *DeleteUserDeleteUserIDOK {
	return &DeleteUserDeleteUserIDOK{}
}

/*
DeleteUserDeleteUserIDOK describes a response with status code 200, with default header values.

User deleted successfully
*/
type DeleteUserDeleteUserIDOK struct {
	Payload *DeleteUserDeleteUserIDOKBody
}

// IsSuccess returns true when this delete user delete user Id o k response has a 2xx status code
func (o *DeleteUserDeleteUserIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete user delete user Id o k response has a 3xx status code
func (o *DeleteUserDeleteUserIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user delete user Id o k response has a 4xx status code
func (o *DeleteUserDeleteUserIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete user delete user Id o k response has a 5xx status code
func (o *DeleteUserDeleteUserIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user delete user Id o k response a status code equal to that given
func (o *DeleteUserDeleteUserIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete user delete user Id o k response
func (o *DeleteUserDeleteUserIDOK) Code() int {
	return 200
}

func (o *DeleteUserDeleteUserIDOK) Error() string {
	return fmt.Sprintf("[DELETE /user/delete/{userID}][%d] deleteUserDeleteUserIdOK  %+v", 200, o.Payload)
}

func (o *DeleteUserDeleteUserIDOK) String() string {
	return fmt.Sprintf("[DELETE /user/delete/{userID}][%d] deleteUserDeleteUserIdOK  %+v", 200, o.Payload)
}

func (o *DeleteUserDeleteUserIDOK) GetPayload() *DeleteUserDeleteUserIDOKBody {
	return o.Payload
}

func (o *DeleteUserDeleteUserIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteUserDeleteUserIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserDeleteUserIDBadRequest creates a DeleteUserDeleteUserIDBadRequest with default headers values
func NewDeleteUserDeleteUserIDBadRequest() *DeleteUserDeleteUserIDBadRequest {
	return &DeleteUserDeleteUserIDBadRequest{}
}

/*
DeleteUserDeleteUserIDBadRequest describes a response with status code 400, with default header values.

Bad request or invalid user ID
*/
type DeleteUserDeleteUserIDBadRequest struct {
}

// IsSuccess returns true when this delete user delete user Id bad request response has a 2xx status code
func (o *DeleteUserDeleteUserIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user delete user Id bad request response has a 3xx status code
func (o *DeleteUserDeleteUserIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user delete user Id bad request response has a 4xx status code
func (o *DeleteUserDeleteUserIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete user delete user Id bad request response has a 5xx status code
func (o *DeleteUserDeleteUserIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user delete user Id bad request response a status code equal to that given
func (o *DeleteUserDeleteUserIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete user delete user Id bad request response
func (o *DeleteUserDeleteUserIDBadRequest) Code() int {
	return 400
}

func (o *DeleteUserDeleteUserIDBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /user/delete/{userID}][%d] deleteUserDeleteUserIdBadRequest ", 400)
}

func (o *DeleteUserDeleteUserIDBadRequest) String() string {
	return fmt.Sprintf("[DELETE /user/delete/{userID}][%d] deleteUserDeleteUserIdBadRequest ", 400)
}

func (o *DeleteUserDeleteUserIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteUserDeleteUserIDNotFound creates a DeleteUserDeleteUserIDNotFound with default headers values
func NewDeleteUserDeleteUserIDNotFound() *DeleteUserDeleteUserIDNotFound {
	return &DeleteUserDeleteUserIDNotFound{}
}

/*
DeleteUserDeleteUserIDNotFound describes a response with status code 404, with default header values.

User not found
*/
type DeleteUserDeleteUserIDNotFound struct {
}

// IsSuccess returns true when this delete user delete user Id not found response has a 2xx status code
func (o *DeleteUserDeleteUserIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user delete user Id not found response has a 3xx status code
func (o *DeleteUserDeleteUserIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user delete user Id not found response has a 4xx status code
func (o *DeleteUserDeleteUserIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete user delete user Id not found response has a 5xx status code
func (o *DeleteUserDeleteUserIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user delete user Id not found response a status code equal to that given
func (o *DeleteUserDeleteUserIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete user delete user Id not found response
func (o *DeleteUserDeleteUserIDNotFound) Code() int {
	return 404
}

func (o *DeleteUserDeleteUserIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /user/delete/{userID}][%d] deleteUserDeleteUserIdNotFound ", 404)
}

func (o *DeleteUserDeleteUserIDNotFound) String() string {
	return fmt.Sprintf("[DELETE /user/delete/{userID}][%d] deleteUserDeleteUserIdNotFound ", 404)
}

func (o *DeleteUserDeleteUserIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteUserDeleteUserIDInternalServerError creates a DeleteUserDeleteUserIDInternalServerError with default headers values
func NewDeleteUserDeleteUserIDInternalServerError() *DeleteUserDeleteUserIDInternalServerError {
	return &DeleteUserDeleteUserIDInternalServerError{}
}

/*
DeleteUserDeleteUserIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error or error deleting user
*/
type DeleteUserDeleteUserIDInternalServerError struct {
}

// IsSuccess returns true when this delete user delete user Id internal server error response has a 2xx status code
func (o *DeleteUserDeleteUserIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user delete user Id internal server error response has a 3xx status code
func (o *DeleteUserDeleteUserIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user delete user Id internal server error response has a 4xx status code
func (o *DeleteUserDeleteUserIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete user delete user Id internal server error response has a 5xx status code
func (o *DeleteUserDeleteUserIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete user delete user Id internal server error response a status code equal to that given
func (o *DeleteUserDeleteUserIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete user delete user Id internal server error response
func (o *DeleteUserDeleteUserIDInternalServerError) Code() int {
	return 500
}

func (o *DeleteUserDeleteUserIDInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /user/delete/{userID}][%d] deleteUserDeleteUserIdInternalServerError ", 500)
}

func (o *DeleteUserDeleteUserIDInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /user/delete/{userID}][%d] deleteUserDeleteUserIdInternalServerError ", 500)
}

func (o *DeleteUserDeleteUserIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
DeleteUserDeleteUserIDOKBody delete user delete user ID o k body
swagger:model DeleteUserDeleteUserIDOKBody
*/
type DeleteUserDeleteUserIDOKBody struct {

	// result
	// Example: success
	Result string `json:"result,omitempty"`
}

// Validate validates this delete user delete user ID o k body
func (o *DeleteUserDeleteUserIDOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this delete user delete user ID o k body based on context it is used
func (o *DeleteUserDeleteUserIDOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteUserDeleteUserIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteUserDeleteUserIDOKBody) UnmarshalBinary(b []byte) error {
	var res DeleteUserDeleteUserIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
