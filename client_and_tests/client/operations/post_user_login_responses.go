// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PostUserLoginReader is a Reader for the PostUserLogin structure.
type PostUserLoginReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostUserLoginReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostUserLoginOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostUserLoginBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostUserLoginUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostUserLoginInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /user/login] PostUserLogin", response, response.Code())
	}
}

// NewPostUserLoginOK creates a PostUserLoginOK with default headers values
func NewPostUserLoginOK() *PostUserLoginOK {
	return &PostUserLoginOK{}
}

/*
PostUserLoginOK describes a response with status code 200, with default header values.

Successful login
*/
type PostUserLoginOK struct {
	Payload *PostUserLoginOKBody
}

// IsSuccess returns true when this post user login o k response has a 2xx status code
func (o *PostUserLoginOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post user login o k response has a 3xx status code
func (o *PostUserLoginOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post user login o k response has a 4xx status code
func (o *PostUserLoginOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post user login o k response has a 5xx status code
func (o *PostUserLoginOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post user login o k response a status code equal to that given
func (o *PostUserLoginOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post user login o k response
func (o *PostUserLoginOK) Code() int {
	return 200
}

func (o *PostUserLoginOK) Error() string {
	return fmt.Sprintf("[POST /user/login][%d] postUserLoginOK  %+v", 200, o.Payload)
}

func (o *PostUserLoginOK) String() string {
	return fmt.Sprintf("[POST /user/login][%d] postUserLoginOK  %+v", 200, o.Payload)
}

func (o *PostUserLoginOK) GetPayload() *PostUserLoginOKBody {
	return o.Payload
}

func (o *PostUserLoginOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostUserLoginOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUserLoginBadRequest creates a PostUserLoginBadRequest with default headers values
func NewPostUserLoginBadRequest() *PostUserLoginBadRequest {
	return &PostUserLoginBadRequest{}
}

/*
PostUserLoginBadRequest describes a response with status code 400, with default header values.

Bad request or invalid request data
*/
type PostUserLoginBadRequest struct {
}

// IsSuccess returns true when this post user login bad request response has a 2xx status code
func (o *PostUserLoginBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post user login bad request response has a 3xx status code
func (o *PostUserLoginBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post user login bad request response has a 4xx status code
func (o *PostUserLoginBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post user login bad request response has a 5xx status code
func (o *PostUserLoginBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post user login bad request response a status code equal to that given
func (o *PostUserLoginBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post user login bad request response
func (o *PostUserLoginBadRequest) Code() int {
	return 400
}

func (o *PostUserLoginBadRequest) Error() string {
	return fmt.Sprintf("[POST /user/login][%d] postUserLoginBadRequest ", 400)
}

func (o *PostUserLoginBadRequest) String() string {
	return fmt.Sprintf("[POST /user/login][%d] postUserLoginBadRequest ", 400)
}

func (o *PostUserLoginBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostUserLoginUnauthorized creates a PostUserLoginUnauthorized with default headers values
func NewPostUserLoginUnauthorized() *PostUserLoginUnauthorized {
	return &PostUserLoginUnauthorized{}
}

/*
PostUserLoginUnauthorized describes a response with status code 401, with default header values.

Unauthorized or invalid credentials
*/
type PostUserLoginUnauthorized struct {
}

// IsSuccess returns true when this post user login unauthorized response has a 2xx status code
func (o *PostUserLoginUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post user login unauthorized response has a 3xx status code
func (o *PostUserLoginUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post user login unauthorized response has a 4xx status code
func (o *PostUserLoginUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post user login unauthorized response has a 5xx status code
func (o *PostUserLoginUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post user login unauthorized response a status code equal to that given
func (o *PostUserLoginUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post user login unauthorized response
func (o *PostUserLoginUnauthorized) Code() int {
	return 401
}

func (o *PostUserLoginUnauthorized) Error() string {
	return fmt.Sprintf("[POST /user/login][%d] postUserLoginUnauthorized ", 401)
}

func (o *PostUserLoginUnauthorized) String() string {
	return fmt.Sprintf("[POST /user/login][%d] postUserLoginUnauthorized ", 401)
}

func (o *PostUserLoginUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostUserLoginInternalServerError creates a PostUserLoginInternalServerError with default headers values
func NewPostUserLoginInternalServerError() *PostUserLoginInternalServerError {
	return &PostUserLoginInternalServerError{}
}

/*
PostUserLoginInternalServerError describes a response with status code 500, with default header values.

Internal Server Error or error generating token
*/
type PostUserLoginInternalServerError struct {
}

// IsSuccess returns true when this post user login internal server error response has a 2xx status code
func (o *PostUserLoginInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post user login internal server error response has a 3xx status code
func (o *PostUserLoginInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post user login internal server error response has a 4xx status code
func (o *PostUserLoginInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post user login internal server error response has a 5xx status code
func (o *PostUserLoginInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post user login internal server error response a status code equal to that given
func (o *PostUserLoginInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post user login internal server error response
func (o *PostUserLoginInternalServerError) Code() int {
	return 500
}

func (o *PostUserLoginInternalServerError) Error() string {
	return fmt.Sprintf("[POST /user/login][%d] postUserLoginInternalServerError ", 500)
}

func (o *PostUserLoginInternalServerError) String() string {
	return fmt.Sprintf("[POST /user/login][%d] postUserLoginInternalServerError ", 500)
}

func (o *PostUserLoginInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
PostUserLoginOKBody post user login o k body
swagger:model PostUserLoginOKBody
*/
type PostUserLoginOKBody struct {

	// token
	// Example: YOUR_TOKEN
	Token string `json:"token,omitempty"`
}

// Validate validates this post user login o k body
func (o *PostUserLoginOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this post user login o k body based on context it is used
func (o *PostUserLoginOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostUserLoginOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostUserLoginOKBody) UnmarshalBinary(b []byte) error {
	var res PostUserLoginOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
